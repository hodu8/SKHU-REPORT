package hw15_1;

import java.util.ArrayList;
import java.util.Collections;

// 소스를 입력하고 Ctrl+Shift+O를 눌러서 필요한 파일을 포함한다.

class Card {
	private int number; // 카드 번호

	public Card(int number) {
		this.number = number;
	}
	public int getNumber() {
		return number;
	}
	public String toString() {
		return Integer.toString(number);
	}
}

//카드 50장을 다루는 덱을 표현하는 클래스 Deck
class Deck {
	public static final int MAX_NUMBER = 50;
	private ArrayList<Card> deck = new ArrayList<Card>();

	// 카드를 생성하여 덱에 넣음
	public Deck() {
		for (int i = 0; i < MAX_NUMBER; i++)
			deck.add(new Card(i));
	}

	// 카드를 섞음
	public void shuffle() {
		Collections.shuffle(deck);
	}

	// 덱의 맨 앞 카드를 제거하여 리턴
	public Card deal() {
		return deck.remove(0);
	}
}

//자신의 카드 리스트를 지닌 플레이어 클래스 Player
class Player {
	private ArrayList<Card> list = new ArrayList<Card>();

	public void getCard(Card card) {
		list.add(card);
	}

	public void showCards() {
		System.out.println(list);
	}

	// 자신이 지닌 카드 중 최대 카드를 리스트에서 삭제하고 리턴하는 메소드를 작성하시오.
	public int removeMaxCard() {
		int max = 0;
		int temp = 0;
		for (int i = 0; i < list.size(); i++) {
			if (Integer.parseInt(list.get(i).toString()) > max) {
				max = Integer.parseInt(list.get(i).toString());
				temp = i;
			}
		} list.remove(temp);
		return max;
	}
}

public class CardGame {
	public static void main(String[] args) {
		System.out.println("hw15_1 : 박찬우\n");
		Deck deck = new Deck();
		deck.shuffle();
		Player p1 = new Player();
		Player p2 = new Player();
		p1.getCard(deck.deal());
		p1.getCard(deck.deal());
		p1.getCard(deck.deal());
		p1.getCard(deck.deal());
		p1.getCard(deck.deal());
		p2.getCard(deck.deal());
		p2.getCard(deck.deal());
		p2.getCard(deck.deal());
		p2.getCard(deck.deal());
		p2.getCard(deck.deal());
		System.out.println("p1과 p2의 카드 목록");
		p1.showCards();
		p2.showCards();
		
		System.out.println("\np1과 p2의 최대 카드");
		int result1 = p1.removeMaxCard();
		int result2 = p2.removeMaxCard();
		System.out.println(result1);
		System.out.println(result2);
		System.out.println("\n");
		System.out.print((result1>result2)?"p1":"p2");
		System.out.println(" 승리!\n");
		System.out.println("p1과 p2의 카드 목록");
		p1.showCards();
		p2.showCards();
	}
}